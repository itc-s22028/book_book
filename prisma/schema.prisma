generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model users {
  id       BigInt   @id @default(autoincrement())
  email    String   @unique(map: "email") @db.VarChar(256)
  name     String?  @db.VarChar(100)
  password Bytes    @db.TinyBlob
  salt     Bytes    @db.TinyBlob
  isAdmin  Boolean? @default(false)
  rental   rental[]
}

model books {
  id          BigInt   @id @default(autoincrement())
  isbn13      Int      @unique(map: "isbn13")
  title       String   @db.VarChar(200)
  author      String   @db.VarChar(100)
  publishDate DateTime @db.Date
  rental      rental[]
}

model rental {
  id             BigInt    @id @default(autoincrement())
  bookId         BigInt?
  userId         BigInt?
  rentalDate     DateTime  @default(now()) @db.DateTime(0)
  returnDeadline DateTime  @default(dbgenerated("(current_timestamp() + interval 7 day)")) @db.DateTime(0)
  returnDate     DateTime? @db.DateTime(0)
  books          books?    @relation(fields: [bookId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rental_ibfk_1")
  users          users?    @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rental_ibfk_2")

  @@index([bookId], map: "bookId")
  @@index([userId], map: "userId")
}
